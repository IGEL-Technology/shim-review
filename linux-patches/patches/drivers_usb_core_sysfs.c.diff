diff -Naurp a/linux-6.6.38.igel/drivers/usb/core/sysfs.c b/linux-6.6.38.igel/drivers/usb/core/sysfs.c
--- a/linux-6.6.38.igel/drivers/usb/core/sysfs.c	2024-07-09 11:44:29.000000000 +0200
+++ b/linux-6.6.38.igel/drivers/usb/core/sysfs.c	2024-08-02 15:41:31.563491776 +0200
@@ -417,6 +417,42 @@ static ssize_t autosuspend_store(struct
 }
 static DEVICE_ATTR_RW(autosuspend);
 
+#ifdef CONFIG_IGEL_USB_DISABLE_DISCONNECT
+/* gottwald@igel.com added sysfs entry to disable USB device disconnect */
+
+static ssize_t disable_disconnect_show(struct device *dev,
+				struct device_attribute *attr, char *buf)
+{
+	struct usb_device *udev = to_usb_device(dev);
+	return sprintf(buf, "%d\n", udev->disable_disconnect);
+}
+
+static ssize_t disable_disconnect_store(struct device *dev,
+				 struct device_attribute *attr, const char *buf,
+				 size_t count)
+{
+	int value;
+	struct usb_interface *intf = to_usb_interface(dev);
+	struct usb_device *udev = to_usb_device(dev);
+	struct usb_device *udev2 = interface_to_usbdev(intf);
+
+	if (sscanf(buf, "%d", &value) != 1 || value > 1 ||
+			value < 0)
+		return -EINVAL;
+
+	usb_lock_device(udev);
+	udev->disable_disconnect = value;
+	usb_unlock_device(udev);
+
+	usb_lock_device(udev2);
+	udev2->disable_disconnect = value;
+	usb_unlock_device(udev2);
+
+	return count;
+}
+static DEVICE_ATTR_RW(disable_disconnect);
+#endif
+
 static const char on_string[] = "on";
 static const char auto_string[] = "auto";
 
@@ -803,6 +839,9 @@ static struct attribute *dev_attrs[] = {
 	&dev_attr_avoid_reset_quirk.attr,
 	&dev_attr_authorized.attr,
 	&dev_attr_remove.attr,
+#ifdef CONFIG_IGEL_USB_DISABLE_DISCONNECT
+	&dev_attr_disable_disconnect.attr,
+#endif
 	&dev_attr_ltm_capable.attr,
 #ifdef CONFIG_OF
 	&dev_attr_devspec.attr,
