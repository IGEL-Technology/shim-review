diff -Naurp a/linux-6.6.38.igel/security/apparmor/procattr.c b/linux-6.6.38.igel/security/apparmor/procattr.c
--- a/linux-6.6.38.igel/security/apparmor/procattr.c	2024-07-09 11:44:29.000000000 +0200
+++ b/linux-6.6.38.igel/security/apparmor/procattr.c	2024-08-02 15:41:31.571491967 +0200
@@ -16,6 +16,60 @@
 #include "include/procattr.h"
 
 
+#ifdef CONFIG_IGEL_APPARMOR_DBUS_SUPPORT
+/**
+ * aa_getprocattr - Return the profile information for @profile
+ * @profile: the profile to print profile info about  (NOT NULL)
+ * @string: Returns - string containing the profile info (NOT NULL)
+ * @newline: Should a newline be added to @string.
+ *
+ * Returns: length of @string on success else error on failure
+ *
+ * Requires: profile != NULL
+ *
+ * Creates a string containing the namespace_name://profile_name for
+ * @profile.
+ *
+ * Returns: size of string placed in @string else error code on failure
+ */
+int aa_getprocattr(struct aa_label *label, char **string, bool newline)
+{
+	struct aa_ns *ns = labels_ns(label);
+	struct aa_ns *current_ns = aa_get_current_ns();
+	int flags = FLAG_VIEW_SUBNS | FLAG_HIDDEN_UNCONFINED;
+	int len;
+
+	if (!aa_ns_visible(current_ns, ns, true)) {
+		aa_put_ns(current_ns);
+		return -EACCES;
+	}
+	if (newline)
+		flags |= FLAG_SHOW_MODE;
+
+	len = aa_label_snxprint(NULL, 0, current_ns, label, flags);
+	AA_BUG(len < 0);
+
+	*string = kmalloc(len + 2, GFP_KERNEL);
+	if (!*string) {
+		aa_put_ns(current_ns);
+		return -ENOMEM;
+	}
+
+	len = aa_label_snxprint(*string, len + 2, current_ns, label, flags);
+	if (len < 0) {
+		aa_put_ns(current_ns);
+		return len;
+	}
+
+	if (newline) {
+		(*string)[len] = '\n';
+		(*string)[++len] = 0;
+	}
+
+	aa_put_ns(current_ns);
+	return len;
+}
+#else /* CONFIG_IGEL_APPARMOR_DBUS_SUPPORT */
 /**
  * aa_getprocattr - Return the label information for @label
  * @label: the label to print label info about  (NOT NULL)
@@ -63,6 +117,7 @@ int aa_getprocattr(struct aa_label *labe
 	aa_put_ns(current_ns);
 	return len + 1;
 }
+#endif /* CONFIG_IGEL_APPARMOR_DBUS_SUPPORT */
 
 /**
  * split_token_from_name - separate a string of form  <token>^<name>
