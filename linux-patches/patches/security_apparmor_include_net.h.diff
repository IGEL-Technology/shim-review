diff -Naurp a/linux-6.6.38.igel/security/apparmor/include/net.h b/linux-6.6.38.igel/security/apparmor/include/net.h
--- a/linux-6.6.38.igel/security/apparmor/include/net.h	2024-07-09 11:44:29.000000000 +0200
+++ b/linux-6.6.38.igel/security/apparmor/include/net.h	2024-08-02 15:41:31.571491967 +0200
@@ -49,9 +49,19 @@
 struct aa_sk_ctx {
 	struct aa_label *label;
 	struct aa_label *peer;
+#ifdef CONFIG_IGEL_APPARMOR_DBUS_SUPPORT
+	struct path path;
+#endif
 };
 
+#ifdef CONFIG_IGEL_APPARMOR_DBUS_SUPPORT
+static inline struct aa_sk_ctx *aa_sock(const struct sock *sk)
+{
+	return sk->sk_security + apparmor_blob_sizes.lbs_sock;
+}
+#else
 #define SK_CTX(X) ((X)->sk_security)
+#endif
 #define SOCK_ctx(X) SOCK_INODE(X)->i_security
 #define DEFINE_AUDIT_NET(NAME, OP, SK, F, T, P)				  \
 	struct lsm_network_audit NAME ## _net = { .sk = (SK),		  \
@@ -69,7 +79,33 @@ struct aa_sk_ctx {
 	DEFINE_AUDIT_NET(NAME, OP, SK, (SK)->sk_family, (SK)->sk_type,	\
 			 (SK)->sk_protocol)
 
+#ifdef CONFIG_IGEL_APPARMOR_DBUS_SUPPORT
+/* struct aa_net - network confinement data
+ * @allow: basic network families permissions
+ * @audit: which network permissions to force audit
+ * @quiet: which network permissions to quiet rejects
+ */
+struct aa_net_compat {
+	u16 allow[AF_MAX];
+	u16 audit[AF_MAX];
+	u16 quiet[AF_MAX];
+};
+#endif
 
+#ifdef CONFIG_IGEL_APPARMOR_DBUS_SUPPORT
+#define af_select(FAMILY, FN, DEF_FN)		\
+({						\
+	int __e;				\
+	switch ((FAMILY)) {			\
+	case AF_UNIX:				\
+		__e = aa_unix_ ## FN;		\
+		break;				\
+	default:				\
+		__e = DEF_FN;			\
+	}					\
+	__e;					\
+})
+#else
 #define af_select(FAMILY, FN, DEF_FN)		\
 ({						\
 	int __e;				\
@@ -79,6 +115,7 @@ struct aa_sk_ctx {
 	}					\
 	__e;					\
 })
+#endif
 
 struct aa_secmark {
 	u8 audit;
@@ -88,6 +125,9 @@ struct aa_secmark {
 };
 
 extern struct aa_sfs_entry aa_sfs_entry_network[];
+#ifdef CONFIG_IGEL_APPARMOR_DBUS_SUPPORT
+extern struct aa_sfs_entry aa_sfs_entry_network_compat[];
+#endif
 
 void audit_net_cb(struct audit_buffer *ab, void *va);
 int aa_profile_af_perm(struct aa_profile *profile,
