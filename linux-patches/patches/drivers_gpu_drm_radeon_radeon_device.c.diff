diff -Naurp a/linux-6.6.38.igel/drivers/gpu/drm/radeon/radeon_device.c b/linux-6.6.38.igel/drivers/gpu/drm/radeon/radeon_device.c
--- a/linux-6.6.38.igel/drivers/gpu/drm/radeon/radeon_device.c	2024-07-09 11:44:29.000000000 +0200
+++ b/linux-6.6.38.igel/drivers/gpu/drm/radeon/radeon_device.c	2024-08-02 15:41:31.547491394 +0200
@@ -1659,6 +1659,9 @@ int radeon_resume_kms(struct drm_device
 	struct pci_dev *pdev = to_pci_dev(dev->dev);
 	struct drm_crtc *crtc;
 	int r;
+#ifdef CONFIG_IGEL_RADEON_FIX_CURSOR_DISAPPEAR
+	int i;
+#endif
 
 	if (dev->switch_power_state == DRM_SWITCH_POWER_OFF)
 		return 0;
@@ -1735,9 +1738,24 @@ int radeon_resume_kms(struct drm_device
 	/* blat the mode back in */
 	if (fbcon) {
 		drm_helper_resume_force_mode(dev);
+#ifdef CONFIG_IGEL_RADEON_FIX_CURSOR_DISAPPEAR
+		/* lang@igel: reinitialize cursors */
+		for (i = 0; i < rdev->num_crtc; i++) {
+			if (rdev->mode_info.crtcs[i]) {
+				radeon_cursor_reset(&rdev->mode_info.crtcs[i]->base);
+			}
+		}
+#endif
 		/* turn on display hw */
 		drm_modeset_lock_all(dev);
 		list_for_each_entry(connector, &dev->mode_config.connector_list, head) {
+#ifdef CONFIG_IGEL_RADEON_SPLIT_DVII
+			/* lang@igel: reset detected_by_load, so the the connector is probed again */
+			struct radeon_connector *radeon_connector = to_radeon_connector(connector);
+
+			if (radeon_connector && radeon_connector->splitted_dvii)
+				radeon_connector->detected_by_load = false;
+#endif
 			drm_helper_connector_dpms(connector, DRM_MODE_DPMS_ON);
 		}
 		drm_modeset_unlock_all(dev);
