diff -Naurp a/linux-6.6.38.igel/drivers/acpi/acpi_tad.c b/linux-6.6.38.igel/drivers/acpi/acpi_tad.c
--- a/linux-6.6.38.igel/drivers/acpi/acpi_tad.c	2024-07-09 11:44:29.000000000 +0200
+++ b/linux-6.6.38.igel/drivers/acpi/acpi_tad.c	2024-08-02 15:41:31.535491108 +0200
@@ -432,6 +432,16 @@ static ssize_t caps_show(struct device *
 
 static DEVICE_ATTR_RO(caps);
 
+#ifdef CONFIG_IGEL_SURFACE_ACPI_CHANGES
+static struct attribute *acpi_tad_attrs[] = {
+	&dev_attr_caps.attr,
+	NULL,
+};
+static const struct attribute_group acpi_tad_attr_group = {
+	.attrs	= acpi_tad_attrs,
+};
+#endif
+
 static ssize_t ac_alarm_store(struct device *dev, struct device_attribute *attr,
 			      const char *buf, size_t count)
 {
@@ -480,16 +490,26 @@ static ssize_t ac_status_show(struct dev
 
 static DEVICE_ATTR_RW(ac_status);
 
+#ifdef CONFIG_IGEL_SURFACE_ACPI_CHANGES
+static struct attribute *acpi_tad_ac_attrs[] = {
+#else
 static struct attribute *acpi_tad_attrs[] = {
 	&dev_attr_caps.attr,
+#endif
 	&dev_attr_ac_alarm.attr,
 	&dev_attr_ac_policy.attr,
 	&dev_attr_ac_status.attr,
 	NULL,
 };
+#ifdef CONFIG_IGEL_SURFACE_ACPI_CHANGES
+static const struct attribute_group acpi_tad_ac_attr_group = {
+	.attrs	= acpi_tad_ac_attrs,
+};
+#else
 static const struct attribute_group acpi_tad_attr_group = {
 	.attrs	= acpi_tad_attrs,
 };
+#endif
 
 static ssize_t dc_alarm_store(struct device *dev, struct device_attribute *attr,
 			      const char *buf, size_t count)
@@ -564,13 +584,25 @@ static int acpi_tad_remove(struct platfo
 
 	pm_runtime_get_sync(dev);
 
+#ifdef CONFIG_IGEL_SURFACE_ACPI_CHANGES
+	if (dd->capabilities & ACPI_TAD_AC_WAKE)
+		sysfs_remove_group(&dev->kobj, &acpi_tad_ac_attr_group);
+#endif
+
 	if (dd->capabilities & ACPI_TAD_DC_WAKE)
 		sysfs_remove_group(&dev->kobj, &acpi_tad_dc_attr_group);
 
 	sysfs_remove_group(&dev->kobj, &acpi_tad_attr_group);
 
+#ifdef CONFIG_IGEL_SURFACE_ACPI_CHANGES
+	if (dd->capabilities & ACPI_TAD_AC_WAKE) {
+		acpi_tad_disable_timer(dev, ACPI_TAD_AC_TIMER);
+		acpi_tad_clear_status(dev, ACPI_TAD_AC_TIMER);
+	}
+#else
 	acpi_tad_disable_timer(dev, ACPI_TAD_AC_TIMER);
 	acpi_tad_clear_status(dev, ACPI_TAD_AC_TIMER);
+#endif
 	if (dd->capabilities & ACPI_TAD_DC_WAKE) {
 		acpi_tad_disable_timer(dev, ACPI_TAD_DC_TIMER);
 		acpi_tad_clear_status(dev, ACPI_TAD_DC_TIMER);
@@ -613,11 +645,13 @@ static int acpi_tad_probe(struct platfor
 		goto remove_handler;
 	}
 
+#ifndef CONFIG_IGEL_SURFACE_ACPI_CHANGES
 	if (!acpi_has_method(handle, "_PRW")) {
 		dev_info(dev, "Missing _PRW\n");
 		ret = -ENODEV;
 		goto remove_handler;
 	}
+#endif
 
 	dd = devm_kzalloc(dev, sizeof(*dd), GFP_KERNEL);
 	if (!dd) {
@@ -649,6 +683,14 @@ static int acpi_tad_probe(struct platfor
 	if (ret)
 		goto fail;
 
+#ifdef CONFIG_IGEL_SURFACE_ACPI_CHANGES
+	if (caps & ACPI_TAD_AC_WAKE) {
+		ret = sysfs_create_group(&dev->kobj, &acpi_tad_ac_attr_group);
+		if (ret)
+			goto fail;
+	}
+#endif
+
 	if (caps & ACPI_TAD_DC_WAKE) {
 		ret = sysfs_create_group(&dev->kobj, &acpi_tad_dc_attr_group);
 		if (ret)
