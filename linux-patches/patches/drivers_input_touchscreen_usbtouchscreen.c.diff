diff -Naurp a/linux-6.6.38.igel/drivers/input/touchscreen/usbtouchscreen.c b/linux-6.6.38.igel/drivers/input/touchscreen/usbtouchscreen.c
--- a/linux-6.6.38.igel/drivers/input/touchscreen/usbtouchscreen.c	2024-07-09 11:44:29.000000000 +0200
+++ b/linux-6.6.38.igel/drivers/input/touchscreen/usbtouchscreen.c	2024-08-02 15:41:31.551491490 +0200
@@ -128,6 +128,9 @@ enum {
 	DEVTYPE_NEXIO,
 	DEVTYPE_ELO,
 	DEVTYPE_ETOUCH,
+#ifdef CONFIG_IGEL_TOUCHSCREEN_USB_REAKIN
+	DEVTYPE_REAKIN,
+#endif
 };
 
 #define USB_DEVICE_HID_CLASS(vend, prod) \
@@ -237,6 +240,9 @@ static const struct usb_device_id usbtou
 	{USB_DEVICE(0x7374, 0x0001), .driver_info = DEVTYPE_ETOUCH},
 #endif
 
+#ifdef CONFIG_IGEL_TOUCHSCREEN_USB_REAKIN
+	{USB_DEVICE(0x16fd, 0x5453), .driver_info = DEVTYPE_REAKIN},
+#endif
 	{}
 };
 
@@ -288,6 +294,10 @@ static int e2i_read_data(struct usbtouch
 
 #define EGALAX_PKT_TYPE_MASK		0xFE
 #define EGALAX_PKT_TYPE_REPT		0x80
+#ifdef CONFIG_IGEL_TOUCHSCREEN_EGALAX_REPT2
+/* lechner@igel.de, 15.10.2010: add support for new touchscreen controller in UD9 */
+#define EGALAX_PKT_TYPE_REPT2		0x02
+#endif
 #define EGALAX_PKT_TYPE_DIAG		0x0A
 
 static int egalax_init(struct usbtouch_usb *usbtouch)
@@ -331,12 +341,32 @@ static int egalax_init(struct usbtouch_u
 
 static int egalax_read_data(struct usbtouch_usb *dev, unsigned char *pkt)
 {
+#ifdef CONFIG_IGEL_TOUCHSCREEN_EGALAX_REPT2
+	if (((pkt[0] & EGALAX_PKT_TYPE_MASK) != EGALAX_PKT_TYPE_REPT)
+		&& ((pkt[0] & EGALAX_PKT_TYPE_MASK) != EGALAX_PKT_TYPE_REPT2)) {
+		return 0;
+	}
+
+	switch (pkt[0] & EGALAX_PKT_TYPE_MASK) {
+	case EGALAX_PKT_TYPE_REPT:
+		dev->x = ((pkt[3] & 0x0F) << 7) | (pkt[4] & 0x7F);
+		dev->y = ((pkt[1] & 0x0F) << 7) | (pkt[2] & 0x7F);
+		dev->touch = pkt[0] & 0x01;
+		break;
+	case EGALAX_PKT_TYPE_REPT2:
+		dev->x = ((pkt[3] & 0x0F) << 8) | pkt[2];
+		dev->y = ((pkt[5] & 0x0F) << 8) | pkt[4];
+		dev->touch = pkt[1] & 0x01;
+		break;
+	}
+#else
 	if ((pkt[0] & EGALAX_PKT_TYPE_MASK) != EGALAX_PKT_TYPE_REPT)
 		return 0;
 
 	dev->x = ((pkt[3] & 0x0F) << 7) | (pkt[4] & 0x7F);
 	dev->y = ((pkt[1] & 0x0F) << 7) | (pkt[2] & 0x7F);
 	dev->touch = pkt[0] & 0x01;
+#endif
 
 	return 1;
 }
@@ -347,6 +377,11 @@ static int egalax_get_pkt_len(unsigned c
 	case EGALAX_PKT_TYPE_REPT:
 		return 5;
 
+#ifdef CONFIG_IGEL_TOUCHSCREEN_EGALAX_REPT2
+	case EGALAX_PKT_TYPE_REPT2:
+		return 6;
+#endif
+
 	case EGALAX_PKT_TYPE_DIAG:
 		if (len < 2)
 			return -1;
@@ -1129,6 +1164,19 @@ static int nexio_read_data(struct usbtou
 }
 #endif
 
+#ifdef CONFIG_IGEL_TOUCHSCREEN_USB_REAKIN
+/*****************************************************************************
+ * Reakin Part
+ */
+static int reakin_read_data(struct usbtouch_usb *dev, unsigned char *pkt)
+{
+	dev->x = ((pkt[2] & 0x0F) << 8) | pkt[1];
+	dev->y = ((pkt[4] & 0x0F) << 8) | pkt[3];
+	dev->touch = pkt[0] & 0x01;
+
+	return 1;
+}
+#endif
 
 /*****************************************************************************
  * ELO part
@@ -1379,6 +1427,16 @@ static struct usbtouch_device_info usbto
 		.read_data	= etouch_read_data,
 	},
 #endif
+#ifdef CONFIG_IGEL_TOUCHSCREEN_USB_REAKIN
+	[DEVTYPE_REAKIN] = {
+		.min_xc		= 0x0,
+		.max_xc		= 0x03ff,
+		.min_yc		= 0x0,
+		.max_yc		= 0x03ff,
+		.rept_size	= 8,
+		.read_data	= reakin_read_data,
+	},
+#endif
 };
 
 
