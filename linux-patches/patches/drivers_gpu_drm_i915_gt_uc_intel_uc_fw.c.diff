diff -Naurp a/linux-6.6.38.igel/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c b/linux-6.6.38.igel/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c
--- a/linux-6.6.38.igel/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c	2024-07-09 11:44:29.000000000 +0200
+++ b/linux-6.6.38.igel/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c	2024-08-02 15:41:31.543491299 +0200
@@ -131,6 +131,19 @@ void intel_uc_fw_change_status(struct in
 	fw_def(BROXTON,      0, huc_mmp(bxt,  2, 0, 0)) \
 	fw_def(SKYLAKE,      0, huc_mmp(skl,  2, 0, 0))
 
+#ifdef CONFIG_IGEL_I915_LOWER_METEOR_LAKE_POWER_CONSUMPTION
+/*
+ * The GSC FW has multiple version (see intel_gsc_uc.h for details); since what
+ * we care about is the interface, we use the compatibility version in the
+ * binary names.
+ * Same as with the GuC, a major version bump indicate a
+ * backward-incompatible change, while a minor version bump indicates a
+ * backward-compatible one, so we use only the former in the file name.
+ */
+#define INTEL_GSC_FIRMWARE_DEFS(fw_def, gsc_def) \
+	fw_def(METEORLAKE,   0, gsc_def(mtl, 1, 0))
+#endif
+
 /*
  * Set of macros for producing a list of filenames from the above table.
  */
@@ -166,6 +179,11 @@ void intel_uc_fw_change_status(struct in
 #define MAKE_HUC_FW_PATH_MMP(prefix_, major_, minor_, patch_) \
 	__MAKE_UC_FW_PATH_MMP(prefix_, "huc", major_, minor_, patch_)
 
+#ifdef CONFIG_IGEL_I915_LOWER_METEOR_LAKE_POWER_CONSUMPTION
+#define MAKE_GSC_FW_PATH(prefix_, major_, minor_) \
+	__MAKE_UC_FW_PATH_MAJOR(prefix_, "gsc", major_)
+#endif
+
 /*
  * All blobs need to be declared via MODULE_FIRMWARE().
  * This first expansion of the table macros is solely to provide
@@ -176,6 +194,9 @@ void intel_uc_fw_change_status(struct in
 
 INTEL_GUC_FIRMWARE_DEFS(INTEL_UC_MODULE_FW, MAKE_GUC_FW_PATH_MAJOR, MAKE_GUC_FW_PATH_MMP)
 INTEL_HUC_FIRMWARE_DEFS(INTEL_UC_MODULE_FW, MAKE_HUC_FW_PATH_BLANK, MAKE_HUC_FW_PATH_MMP, MAKE_HUC_FW_PATH_GSC)
+#ifdef CONFIG_IGEL_I915_LOWER_METEOR_LAKE_POWER_CONSUMPTION
+INTEL_GSC_FIRMWARE_DEFS(INTEL_UC_MODULE_FW, MAKE_GSC_FW_PATH)
+#endif
 
 /*
  * The next expansion of the table macros (in __uc_fw_auto_select below) provides
@@ -225,6 +246,12 @@ struct __packed uc_fw_blob {
 #define HUC_FW_BLOB_GSC(prefix_) \
 	UC_FW_BLOB_NEW(0, 0, 0, true, MAKE_HUC_FW_PATH_GSC(prefix_))
 
+#ifdef CONFIG_IGEL_I915_LOWER_METEOR_LAKE_POWER_CONSUMPTION
+#define GSC_FW_BLOB(prefix_, major_, minor_) \
+	UC_FW_BLOB_NEW(major_, minor_, 0, true, \
+		       MAKE_GSC_FW_PATH(prefix_, major_, minor_))
+#endif
+
 struct __packed uc_fw_platform_requirement {
 	enum intel_platform p;
 	u8 rev; /* first platform rev using this FW */
@@ -251,9 +278,18 @@ static const struct uc_fw_platform_requi
 	INTEL_HUC_FIRMWARE_DEFS(MAKE_FW_LIST, HUC_FW_BLOB, HUC_FW_BLOB_MMP, HUC_FW_BLOB_GSC)
 };
 
+#ifdef CONFIG_IGEL_I915_LOWER_METEOR_LAKE_POWER_CONSUMPTION
+static const struct uc_fw_platform_requirement blobs_gsc[] = {
+	INTEL_GSC_FIRMWARE_DEFS(MAKE_FW_LIST, GSC_FW_BLOB)
+};
+#endif
+
 static const struct fw_blobs_by_type blobs_all[INTEL_UC_FW_NUM_TYPES] = {
 	[INTEL_UC_FW_TYPE_GUC] = { blobs_guc, ARRAY_SIZE(blobs_guc) },
 	[INTEL_UC_FW_TYPE_HUC] = { blobs_huc, ARRAY_SIZE(blobs_huc) },
+#ifdef CONFIG_IGEL_I915_LOWER_METEOR_LAKE_POWER_CONSUMPTION
+	[INTEL_UC_FW_TYPE_GSC] = { blobs_gsc, ARRAY_SIZE(blobs_gsc) },
+#endif
 };
 
 static void
@@ -266,13 +302,15 @@ __uc_fw_auto_select(struct drm_i915_priv
 	int i;
 	bool found;
 
+#ifndef CONFIG_IGEL_I915_LOWER_METEOR_LAKE_POWER_CONSUMPTION
 	/*
-	 * GSC FW support is still not fully in place, so we're not defining
-	 * the FW blob yet because we don't want the driver to attempt to load
-	 * it until we're ready for it.
-	 */
+	* GSC FW support is still not fully in place, so we're not defining
+	* the FW blob yet because we don't want the driver to attempt to load
+	* it until we're ready for it.
+	*/
 	if (uc_fw->type == INTEL_UC_FW_TYPE_GSC)
 		return;
+#endif
 
 	/*
 	 * The only difference between the ADL GuC FWs is the HWConfig support.
